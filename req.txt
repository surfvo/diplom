aiogram
aioredis
asyncpg
aiohttp
pydantic



dir bot:
-handlers:
--lend_park_handler.py - модуль отвечающий за обработку колбэков для срздания порковочного места
--message_processing_handler.py - модуль отвечающий за обработку сообщений пользователя
--owners_park_handler.py - модуль отвечающий за просмотр своих парковочных мест, редактиррвание и удаление их
--start_handlers.py - модуль отвечающий за сбор данных человека и его приветсвие
--search_handlers.py -  модуль отвечающий за поиск парковочного места
-keyboards:
--lend_park_keyboard.py - модуль отвечающий за созданиее клавиатур пользователя на момент создания парковочного метса
--owners_park_keyboards.py - модуль отвечающий за создание клавиатур пользователя для отображения его парк мест
--search_park_keyboard.py - моудль отвечающий за отображение клавиатур всех парковочных мест при их поиске
--start_keyboards.py -  модуль отвечающий за создание клавиатуры приветсвия
-img: - директория в которой хранятся изображения
-- ... - files.png
-migrations: -  директория хранящая миграции для базы данных
--migrations - sql скрипт для создания таблиц
-schemas:
--pp_schema - схема/струтура данных упрощение взаимодействия с данным из базы данных
-services:
--managers: -  директория хранящие модули взаимодействия с базами данных
--- pg_manager - модуль для взаимодействия с базой данных
--- redis_manager мудуль для взаимодействия с редисом
--lend_park_service: - логика работы блока создания парковочного места
--owners_park_service: - логика работы блока отображения и редоктаривания своих мест
--user_service: - логика взаимодействия с данными пользователя
-docker-compose: - это средство для определения и запуска приложений Docker с несколькими контейнерами.
-dockerfile: - файл создающий контенер бота
-main: - файл запуска проекта связывающий хэндлеры с ботом
-req: -  файл хранящий все используемые библиотеки
-settings: -  файл содержащий конфигурации и настройки
